BROKER SCHEMA com.banking.mq


CREATE COMPUTE MODULE Rest_Banking_MQ_c_getData
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		/* DECLARACION DE REFERENCIAS */
		DECLARE refInputData REFERENCE TO InputRoot.JSON.Data;
		DECLARE dateInit CHARACTER;
		DECLARE dateEnd CHARACTER;
		DECLARE accountBanking CHARACTER;
		
		/* SETEAMOS LOS VALORES DE ENTRADA */
		SET accountBanking 	= refInputData.accountBanking;
		SET dateInit 		= refInputData.dateInit;
		SET dateEnd 		= refInputData.dateEnd;				
		
		/* ENVIAMOS RESPUESTA AL SERVICIO */
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE LASTCHILD OF OutputRoot.JSON NAME 'Data';
		DECLARE refOutputData REFERENCE TO OutputRoot.JSON.Data;
		
		SET refOutputData.fecha = CURRENT_TIMESTAMP;
		SET refOutputData.code = '000';
		SET refOutputData.messague = 'Se inicio el proceso, espere unos minutos..';
		
		PROPAGATE TO TERMINAL 0;
								
		/* ENVIAMOS MENSAJE PARA PROCESAMIENTO */
		SET OutputRoot.JSON = NULL;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE LASTCHILD OF OutputRoot.JSON NAME 'Data';
		DECLARE refOutputMQ REFERENCE TO OutputRoot.JSON.Data;
		
		SET refOutputMQ.accountBanking 	= accountBanking;
		SET refOutputMQ.dateInit 		= dateInit;
		SET refOutputMQ.dateEnd 		= dateEnd;
		
		PROPAGATE TO TERMINAL 1;
									
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
